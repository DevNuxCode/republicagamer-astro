---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const currentPath = Astro.url.pathname;
---

<nav class="w-full p-4 transition-colors duration-300">
  <div class="container mx-auto flex flex-col md:flex-row justify-between items-center gap-4">
    <div class="flex items-center space-x-2">
      <img 
        src="/logo_negro.png" 
        alt="LaRepublicaMer Logo" 
        class="w-8 h-8 block dark:hidden"
      />
      <img 
        src="/logo_blanco.png" 
        alt="LaRepublicagamer Logo" 
        class="w-8 h-8 hidden dark:block"
      />
      <a href={`/${lang}`} class="text-xl font-bold">LaRepublicaGamer</a>
    </div>

    <div class="flex items-center space-x-6">
      <div class="flex space-x-4">
        <a 
          href={`/${lang}`} 
          class={`hover:text-primary ${currentPath === `/${lang}` ? 'text-primary font-bold' : ''}`}
        >
          {lang === 'es' ? 'Inicio' : 'Home'}
        </a>
        <a 
          href={`/${lang}/videos`} 
          class={`hover:text-primary ${currentPath.includes('/videos') ? 'text-primary font-bold' : ''}`}
        >
          {lang === 'es' ? 'Videos' : 'Videos'}
        </a>
        <a 
          href={`/${lang}/blog`} 
          class={`hover:text-primary ${currentPath.includes('/blog') ? 'text-primary font-bold' : ''}`}
        >
          {lang === 'es' ? 'Noticias' : 'News'}
        </a>
      </div>

      <div class="flex items-center space-x-4">
        <select id="themeSelector" class="rounded px-2 py-1 bg-white dark:bg-gray-700">
          <option value="light">{t('nav.theme.light')}</option>
          <option value="dark">{t('nav.theme.dark')}</option>
         
        </select>
        <div class="space-x-2">
          <a href="/en" class={lang === 'en' ? 'font-bold' : ''}>EN</a>
          <a href="/es" class={lang === 'es' ? 'font-bold' : ''}>ES</a>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  const themeSelector = document.getElementById('themeSelector');
  
  themeSelector?.addEventListener('change', (e) => {
    const theme = (e.target as HTMLSelectElement).value;
    document.documentElement.className = theme;
    localStorage.setItem('theme', theme);
  });

  // Load saved theme
  const savedTheme = localStorage.getItem('theme') || 'light';
  if (themeSelector) {
    themeSelector.value = savedTheme;
  }
  document.documentElement.className = savedTheme;
</script>