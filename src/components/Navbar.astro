
---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const currentPath = Astro.url.pathname;
---

<nav class="w-full p-4 transition-colors duration-300">
  <div class="container mx-auto flex justify-between items-center">
    <div class="flex items-center space-x-2">
      <img 
        src="/logo_negro.png" 
        alt="LaRepublicaGamer Logo" 
        class="w-8 h-8 block dark:hidden"
      />
      <img 
        src="/logo_blanco.png" 
        alt="LaRepublicaGamer Logo" 
        class="w-8 h-8 hidden dark:block"
      />
      <a href={`/${lang}`} class="text-xl font-bold hidden sm:block">LaRepublicaGamer</a>
    </div>

    <!-- Hamburger Menu Button -->
    <button 
      id="menuButton" 
      class="md:hidden flex flex-col justify-center items-center w-8 h-8 space-y-1.5 focus:outline-none"
      aria-label="Toggle menu"
    >
      <span class="w-6 h-0.5 bg-current transform transition-transform duration-300"></span>
      <span class="w-6 h-0.5 bg-current transform transition-opacity duration-300"></span>
      <span class="w-6 h-0.5 bg-current transform transition-transform duration-300"></span>
    </button>

    <!-- Desktop Menu -->
    <div class="hidden md:flex items-center space-x-6">
      <div class="flex space-x-4">
        <a 
          href={`/${lang}`} 
          class={`hover:text-primary ${currentPath === `/${lang}` ? 'text-primary font-bold' : ''}`}
        >
          {lang === 'es' ? 'Inicio' : 'Home'}
        </a>
        <a 
          href={`/${lang}/videos`} 
          class={`hover:text-primary ${currentPath.includes('/videos') ? 'text-primary font-bold' : ''}`}
        >
          {lang === 'es' ? 'Videos' : 'Videos'}
        </a>
        <a 
          href={`/${lang}/blog`} 
          class={`hover:text-primary ${currentPath.includes('/blog') ? 'text-primary font-bold' : ''}`}
        >
          {lang === 'es' ? 'Noticias' : 'News'}
        </a>
      </div>

      <div class="flex items-center space-x-4">
        <select id="themeSelector" class="rounded px-2 py-1 bg-white dark:bg-gray-700">
          <option value="light">{t('nav.theme.light')}</option>
          <option value="dark">{t('nav.theme.dark')}</option>
         
        </select>
        <div class="space-x-2">
          <a href="/en" class={lang === 'en' ? 'font-bold' : ''}>EN</a>
          <a href="/es" class={lang === 'es' ? 'font-bold' : ''}>ES</a>
        </div>
      </div>
    </div>

    <!-- Mobile Menu -->
    <div 
      id="mobileMenu" 
      class="fixed inset-0 bg-white dark:bg-gray-900 transform translate-x-full transition-transform duration-300 ease-in-out md:hidden"
      style="z-index: 1000;"
    >
      <div class="flex flex-col h-full p-4">
        <div class="flex justify-between items-center mb-8">
          <div class="flex items-center space-x-2">
            <img 
              src="/logo_negro.png" 
              alt="LaRepublicaMer Logo" 
              class="w-8 h-8 block dark:hidden"
            />
            <img 
              src="/logo_blanco.png" 
              alt="LaRepublicaMer Logo" 
              class="w-8 h-8 hidden dark:block"
            />
            <span class="text-xl font-bold">La Republica Gamer</span>
          </div>
          <button 
            id="closeMenu" 
            class="w-8 h-8 flex items-center justify-center focus:outline-none"
            aria-label="Close menu"
          >
            <span class="sr-only">Close menu</span>
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>

        <div class="flex flex-col space-y-4">
          <a 
            href={`/${lang}`} 
            class={`text-lg hover:text-primary ${currentPath === `/${lang}` ? 'text-primary font-bold' : ''}`}
          >
            {lang === 'es' ? 'Inicio' : 'Home'}
          </a>
          <a 
            href={`/${lang}/videos`} 
            class={`text-lg hover:text-primary ${currentPath.includes('/videos') ? 'text-primary font-bold' : ''}`}
          >
            {lang === 'es' ? 'Videos' : 'Videos'}
          </a>
          <a 
            href={`/${lang}/blog`} 
            class={`text-lg hover:text-primary ${currentPath.includes('/blog') ? 'text-primary font-bold' : ''}`}
          >
            {lang === 'es' ? 'Noticias' : 'News'}
          </a>
        </div>

        <div class="mt-auto">
          <div class="flex flex-col space-y-4">
            <select id="themeSelectorMobile" class="rounded px-2 py-1 bg-white dark:bg-gray-700">
              <option value="light">{t('nav.theme.light')}</option>
              <option value="dark">{t('nav.theme.dark')}</option>
              
            </select>
            <div class="flex space-x-4 justify-center">
              <a href="/en" class={`text-lg ${lang === 'en' ? 'font-bold' : ''}`}>EN</a>
              <a href="/es" class={`text-lg ${lang === 'es' ? 'font-bold' : ''}`}>ES</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  const menuButton = document.getElementById('menuButton');
  const closeMenu = document.getElementById('closeMenu');
  const mobileMenu = document.getElementById('mobileMenu');
  const themeSelector = document.getElementById('themeSelector');
  const themeSelectorMobile = document.getElementById('themeSelectorMobile');
  
  // Hamburger menu animation
  function toggleMenu() {
    const isOpen = mobileMenu?.classList.contains('translate-x-0');
    const spans = menuButton?.querySelectorAll('span');
    
    if (isOpen) {
      mobileMenu?.classList.remove('translate-x-0');
      mobileMenu?.classList.add('translate-x-full');
      // Reset hamburger icon
      spans?.[0].classList.remove('rotate-45', 'translate-y-2');
      spans?.[1].classList.remove('opacity-0');
      spans?.[2].classList.remove('-rotate-45', '-translate-y-2');
    } else {
      mobileMenu?.classList.remove('translate-x-full');
      mobileMenu?.classList.add('translate-x-0');
      // Animate to X
      spans?.[0].classList.add('rotate-45', 'translate-y-2');
      spans?.[1].classList.add('opacity-0');
      spans?.[2].classList.add('-rotate-45', '-translate-y-2');
    }
  }

  menuButton?.addEventListener('click', toggleMenu);
  closeMenu?.addEventListener('click', toggleMenu);

  // Theme handling
  function handleThemeChange(e: Event) {
    const theme = (e.target as HTMLSelectElement).value;
    document.documentElement.className = theme;
    localStorage.setItem('theme', theme);
    
    // Sync both selectors
    if (themeSelector && themeSelectorMobile) {
      themeSelector.value = theme;
      themeSelectorMobile.value = theme;
    }
  }

  themeSelector?.addEventListener('change', handleThemeChange);
  themeSelectorMobile?.addEventListener('change', handleThemeChange);

  // Load saved theme
  const savedTheme = localStorage.getItem('theme') || 'light';
  if (themeSelector && themeSelectorMobile) {
    themeSelector.value = savedTheme;
    themeSelectorMobile.value = savedTheme;
  }
  document.documentElement.className = savedTheme;
</script>